@model Locadora_de_veiculos.Models.Veiculo

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Alterar Dados do Veículo";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="panel panel-primary">
        <div class="panel-heading">
            Alteração dos dados de um Veículo
        </div>
        <div class="panel-body">

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.VeiculoID)

                <div class="form-group">
                    @Html.LabelFor(model => model.Nome, htmlAttributes:
                        new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nome, new
                        {
                            htmlAttributes = new { @class = "form-control" }
                        })
                        @Html.ValidationMessageFor(
                            model => model.Nome, "",
                            new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Marca, htmlAttributes:
                        new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Marca, new
                        {
                            htmlAttributes = new { @class = "form-control" }
                        })
                        @Html.ValidationMessageFor(
                            model => model.Marca, "",
                            new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Ano, htmlAttributes:
                        new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Ano, new
                        {
                            htmlAttributes = new { @class = "form-control" }
                        })
                        @Html.ValidationMessageFor(
                            model => model.Ano, "",
                            new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Km, htmlAttributes:
                        new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Km, new
                        {
                            htmlAttributes = new { @class = "form-control" }
                        })
                        @Html.ValidationMessageFor(
                            model => model.Km, "",
                            new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Combustivel, htmlAttributes:
                        new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Combustivel, new
                        {
                            htmlAttributes = new { @class = "form-control" }
                        })
                        @Html.ValidationMessageFor(
                            model => model.Combustivel, "",
                            new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Cor, htmlAttributes:
                        new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Cor, new
                        {
                            htmlAttributes = new { @class = "form-control" }
                        })
                        @Html.ValidationMessageFor(
                            model => model.Cor, "",
                            new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Valor, htmlAttributes:
                        new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Valor, new
                        {
                            htmlAttributes = new { @class = "form-control" }
                        })
                        @Html.ValidationMessageFor(
                            model => model.Valor, "",
                            new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="panel-footer panel-info">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit"
                           value="Gravar alterações"
                           class="btn btn-info" />
                    @Html.ActionLink("Retornar para a listagem de veículos", "Index",
                            null, new { @class = "btn btn-warning" })
                </div>
                <br />
                <br />
            </div>
        </div>
    </div>
}

@section ScriptPage{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('li').removeClass("active");
            $('#liVeiculos').addClass("active")
        });
    </script>
}



@*// -- Código Antigo -- \\*@
@*@{
        Layout = null;
    }

    <!DOCTYPE html>

    <html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>Edit</title>
    </head>
    <body>
        <script src="~/Scripts/jquery-3.4.1.min.js"></script>
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Veiculo</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.VeiculoID)

                <div class="form-group">
                    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Ano, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Ano, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ano, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Km, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Km, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Km, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Combustivel, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Combustivel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Combustivel, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Cor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Cor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Cor, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </body>
    </html>*@
